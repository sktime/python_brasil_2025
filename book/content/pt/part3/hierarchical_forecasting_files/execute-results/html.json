{
  "hash": "00369b8f9f3f95617cc57077c327824d",
  "result": {
    "engine": "jupyter",
    "markdown": "# Forecasting Hierárquico\n\nMuitas vezes, não apenas temos múltiplas séries temporais, mas essas séries também estão organizadas em uma hierarquia. Por exemplo, vendas de produtos podem ser organizadas por SKU, categoria, departamento e total da loja.\n\nVamos usar o mesmo dataset sintético, mas agora com uma hierarquia de produtos.\n\n\n\n\n\n\n```{mermaid}\n\ngraph TD\n  root[\"__total\"]\n\n  %% group -1\n  root --> g_minus1[\"-1\"]\n  g_minus1 --> sku20[\"20\"]\n  g_minus1 --> sku21[\"21\"]\n  g_minus1 --> sku22[\"22\"]\n  g_minus1 --> sku23[\"23\"]\n  g_minus1 --> sku24[\"24\"]\n\n  %% group 0\n  root --> g0[\"0\"]\n  g0 --> sku0[\"0\"]\n  g0 --> sku1[\"1\"]\n  g0 --> sku2[\"2\"]\n  g0 --> sku3[\"3\"]\n  g0 --> sku4[\"4\"]\n\n  %% group 1\n  root --> g1[\"...\"]\n\n  \n  %% group 3\n  root --> g3[\"3\"]\n  g3 --> sku15[\"15\"]\n  g3 --> sku16[\"16\"]\n  g3 --> sku17[\"17\"]\n  g3 --> sku18[\"18\"]\n  g3 --> sku19[\"19\"]\n```\n\n\n\n\n\n\n\nAo mesmo tempo que dados hierarárquicos são interessantes pois nos trazem mais informação, eles também trazem desafios adicionais. Imagine que queremos prever as vendas futuras de cada produto. Se fizermos previsões independetes para cada produto, não há garantia que a soma das previsões dos produtos será igual à previsão do total da loja. Isso é chamado de incoerência nas previsões hierárquicas. O processo de ajustar as previsões para garantir coerência é chamado de **reconciliação**.\n\n## Carregando dados\n\nVamos usar os dados sintéticos, agora com sua versao hierárquica.\n\n\n\n::: {#1bfea3a6 .cell execution_count=2}\n``` {.python .cell-code}\nfrom tsbook.datasets.retail import SyntheticRetail\n\ndataset = SyntheticRetail(\"hierarchical\")\ny_train, X_train, y_test, X_test = dataset.load(\"y_train\", \"X_train\", \"y_test\", \"X_test\")\n```\n:::\n\n\n## Uso de pandas e dados hierárquicos\n\nAgora, os dataframes possuem mais de 2 ou mais índices, representando a hierarquia.\n\n::: {#bb1952a3 .cell execution_count=3}\n``` {.python .cell-code}\ny_train\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th></th>\n      <th>sales</th>\n    </tr>\n    <tr>\n      <th>group_id</th>\n      <th>sku_id</th>\n      <th>date</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">-1</th>\n      <th rowspan=\"5\" valign=\"top\">20</th>\n      <th>2020-01-01</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2020-01-02</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2020-01-03</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2020-01-04</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2020-01-05</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <th>...</th>\n      <th>...</th>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">__total</th>\n      <th rowspan=\"5\" valign=\"top\">__total</th>\n      <th>2024-07-01</th>\n      <td>2000</td>\n    </tr>\n    <tr>\n      <th>2024-07-02</th>\n      <td>1616</td>\n    </tr>\n    <tr>\n      <th>2024-07-03</th>\n      <td>1917</td>\n    </tr>\n    <tr>\n      <th>2024-07-04</th>\n      <td>2384</td>\n    </tr>\n    <tr>\n      <th>2024-07-05</th>\n      <td>2462</td>\n    </tr>\n  </tbody>\n</table>\n<p>51088 rows × 1 columns</p>\n</div>\n```\n:::\n:::\n\n\nPara obter o número de pontos de série únicos (séries temporais individuais), podemos fazer o seguinte:\n\n::: {#bf5859f4 .cell execution_count=4}\n``` {.python .cell-code}\ny_train.index.droplevel(-1).nunique()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n31\n```\n:::\n:::\n\n\nNote que existem algumas séries com um identificador `__total`. Esse identificador representa o total para aquele nível da hierarquia. Por exemplo, se o id completo é `(-1, \"__total\")`, isso representa o total do grupo -1.\n\n::: {#0305cb20 .cell execution_count=5}\n``` {.python .cell-code}\ny_train.loc[(-1, \"__total\")].head()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sales</th>\n    </tr>\n    <tr>\n      <th>date</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2020-01-01</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>2020-01-02</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2020-01-03</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2020-01-04</th>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>2020-01-05</th>\n      <td>16</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nO total de todas as séries é representado por `(\"__total\", \"__total\")`.\n\n::: {#78019572 .cell execution_count=6}\n``` {.python .cell-code}\ny_train.loc[(\"__total\", \"__total\")]\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sales</th>\n    </tr>\n    <tr>\n      <th>date</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2020-01-01</th>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>2020-01-02</th>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>2020-01-03</th>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>2020-01-04</th>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>2020-01-05</th>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2024-07-01</th>\n      <td>2000</td>\n    </tr>\n    <tr>\n      <th>2024-07-02</th>\n      <td>1616</td>\n    </tr>\n    <tr>\n      <th>2024-07-03</th>\n      <td>1917</td>\n    </tr>\n    <tr>\n      <th>2024-07-04</th>\n      <td>2384</td>\n    </tr>\n    <tr>\n      <th>2024-07-05</th>\n      <td>2462</td>\n    </tr>\n  </tbody>\n</table>\n<p>1648 rows × 1 columns</p>\n</div>\n```\n:::\n:::\n\n\nPara contabilizar o número de séries temporais individuais, podemos fazer o seguinte:\n\n::: {#34680d4b .cell execution_count=7}\n``` {.python .cell-code}\ny_train.index.droplevel(-1).nunique()\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\n31\n```\n:::\n:::\n\n\n## Previsão sem reconciliação\n\nVamos fazer uma previsão e entender o problema da incoerência.\n\n::: {#ae451738 .cell execution_count=8}\n``` {.python .cell-code}\nfh = y_test.index.get_level_values(-1).unique()\n```\n:::\n\n\n::: {#248068cf .cell execution_count=9}\n``` {.python .cell-code}\nfrom tsbook.forecasting.reduction import ReductionForecaster\nfrom lightgbm import LGBMRegressor\n\nforecaster = ReductionForecaster(\n    LGBMRegressor(n_estimators=50, verbose=-1),\n    window_length=30,\n    normalization_strategy=\"divide_mean\",\n)\nforecaster.fit(y_train, X=X_train)\ny_pred = forecaster.predict(fh, X=X_test)\n```\n:::\n\n\nPara somar as previsões de baixo para cima, podemos usar o transformador `Aggregator`. Vamos ver que,\nquando somarmos as previsões das séries filhas, o resultado não é igual à previsão da série total.\n\n::: {#14408f79 .cell execution_count=10}\n``` {.python .cell-code}\nfrom sktime.transformations.hierarchical.aggregate import Aggregator\n\nAggregator().fit_transform(y_pred) - y_pred\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th></th>\n      <th>sales</th>\n    </tr>\n    <tr>\n      <th>group_id</th>\n      <th>sku_id</th>\n      <th>date</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">-1</th>\n      <th rowspan=\"5\" valign=\"top\">20</th>\n      <th>2024-07-06</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>2024-07-07</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>2024-07-08</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>2024-07-09</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>2024-07-10</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <th>...</th>\n      <th>...</th>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">__total</th>\n      <th rowspan=\"5\" valign=\"top\">__total</th>\n      <th>2024-12-28</th>\n      <td>236.811238</td>\n    </tr>\n    <tr>\n      <th>2024-12-29</th>\n      <td>408.247548</td>\n    </tr>\n    <tr>\n      <th>2024-12-30</th>\n      <td>222.472056</td>\n    </tr>\n    <tr>\n      <th>2024-12-31</th>\n      <td>98.131539</td>\n    </tr>\n    <tr>\n      <th>2025-01-01</th>\n      <td>9.309276</td>\n    </tr>\n  </tbody>\n</table>\n<p>5580 rows × 1 columns</p>\n</div>\n```\n:::\n:::\n\n\nExiste uma diferença... ou seja, os valores não batem.\nImagine o impacto de levar previsões incoerentes para a tomada de decisão em uma empresa?\nA raiz do problema é que temos mais modelos que graus de liberdade. Para ilustrar, suponha que temos 3 séries: $A$, $B$ e $C$, onde:\n\n$$\nC(t) = A(t) + B(t)\n$$\n\nAqui, temos 3 séries, mas apenas 2 graus de liberdade, pois $C$ é completamente determinado por $A$ e $B$. Se fizermos previsões independentes para $A$, $B$ e $C$, não há garantia de que a relação acima será mantida nas previsões.\n\n## Reconciliação de previsões hierárquicas\n\n![](img/hierarchical_reconciled_vs_not.png)\n\nExistem diferentes métodos para reconciliar previsões em séries temporais hierárquicas. Não existe uma solução única, e o melhor método depende dos dados e do contexto.\n\n## Bottom-up\n\nA maneira mais simples de reconcialiar previsões hierárquicas é a abordagem **bottom-up**. Nessa abordagem, fazemos previsões apenas para as séries mais baixas na hierarquia (as séries filhas) e depois somamos essas previsões para obter as previsões das séries superiores (as séries pais).\n\n<img src=\"img/hierarchical_bottomup.png\" alt=\"Hierarchical Bottom-up\" width=\"450\">\n\nLados positivos:\n\n* Simplicidade: fácil de entender e implementar.\n* Coerência garantida: a soma das previsões das séries filhas sempre será igual à previsão da série pai.\n* Sérias filhas podem capturar detalhes específicos que podem ser perdidos em níveis superiores.\n\nNo entanto, essa abordagem também tem desvantagens: é sucetível ao ruído nas séries filhas, e se as séries filhas tiverem pouca informação, as previsões podem ser ruins. Por exemplo, muitos zeros nas séries de níveis baixos pode levar a previsões ruins a niveis agregados.\n\n#### Top-down (forecast proportions)\n\n<img src=\"img/hierarchical_td_fcst.png\" alt=\"Topdown Forecast\" width=\"900\">\n\n#### Optimal reconciliation\n\nThe coherence can be translated as linear constraints on the forecasts:\n\n$$\ny_{total} = \\sum_{i=1}^{n} y_i\n$$\n\nThis is mathematically equivalent to saying that the coherent forecasts lie in a hyperplane defined by the linear constraints.\n\n![](img/coherent_plane.png)\n\n* **OLS** : project the base forecasts into the reconciliation space.\n* **Weighted OLS**: project all base forecasts into the reconciliation space, but with different weights.\n* **Minimum trace (MinT)**: use the error covariance matrix to find the optimal reconciled forecasts. Called \"optimal\".\n\n::: {#2e0c8cbf .cell execution_count=11}\n``` {.python .cell-code}\nfrom sktime.transformations.hierarchical.reconcile import (\n    BottomUpReconciler,\n    TopdownReconciler,\n    OptimalReconciler\n)\n\nbottom_up = BottomUpReconciler() * forecaster\ntop_down_fcst = TopdownReconciler() * forecaster\noptimal = OptimalReconciler(\"ols\") * forecaster\n```\n:::\n\n\n::: {#88777ac3 .cell execution_count=12}\n``` {.python .cell-code}\nbottom_up.fit(y_train)\ntop_down_fcst.fit(y_train)\noptimal.fit(y_train)\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```{=html}\n<style>#sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 {\n    /* Definition of color scheme common for light and dark mode */\n    --sklearn-color-text: black;\n    --sklearn-color-line: gray;\n    /* Definition of color scheme for objects */\n    --sklearn-color-level-0: #fff5e6;\n    --sklearn-color-level-1: #f6e4d2;\n    --sklearn-color-level-2: #ffe0b3;\n    --sklearn-color-level-3: chocolate;\n\n    /* Specific color for light theme */\n    --sklearn-color-text-on-default-background: var(--theme-code-foreground, var(--jp-content-font-color1, black));\n    --sklearn-color-background: var(--theme-background, var(--jp-layout-color0, white));\n    --sklearn-color-border-box: var(--theme-code-foreground, var(--jp-content-font-color1, black));\n    --sklearn-color-icon: #696969;\n\n    @media (prefers-color-scheme: dark) {\n      /* Redefinition of color scheme for dark theme */\n      --sklearn-color-text-on-default-background: var(--theme-code-foreground, var(--jp-content-font-color1, white));\n      --sklearn-color-background: var(--theme-background, var(--jp-layout-color0, #111));\n      --sklearn-color-border-box: var(--theme-code-foreground, var(--jp-content-font-color1, white));\n      --sklearn-color-icon: #878787;\n    }\n  }\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 {\n    color: var(--sklearn-color-text);\n  }\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 pre {\n    padding: 0;\n  }\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 input.sk-hidden--visually {\n    border: 0;\n    clip: rect(1px 1px 1px 1px);\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n  }\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-dashed-wrapped {\n    border: 1px dashed var(--sklearn-color-line);\n    margin: 0 0.4em 0.5em 0.4em;\n    box-sizing: border-box;\n    padding-bottom: 0.4em;\n    background-color: var(--sklearn-color-background);\n  }\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-container {\n    /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n       but bootstrap.min.css set `[hidden] { display: none !important; }`\n       so we also need the `!important` here to be able to override the\n       default hidden behavior on the sphinx rendered scikit-learn.org.\n       See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n    display: inline-block !important;\n    position: relative;\n  }\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-text-repr-fallback {\n    display: none;\n  }\n\n  div.sk-parallel-item,\n  div.sk-serial,\n  div.sk-item {\n    /* draw centered vertical line to link estimators */\n    background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n    background-size: 2px 100%;\n    background-repeat: no-repeat;\n    background-position: center center;\n  }\n\n  /* Parallel-specific style estimator block */\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-parallel-item::after {\n    content: \"\";\n    width: 100%;\n    border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n    flex-grow: 1;\n  }\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-parallel {\n    display: flex;\n    align-items: stretch;\n    justify-content: center;\n    background-color: var(--sklearn-color-background);\n    position: relative;\n  }\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-parallel-item {\n    display: flex;\n    flex-direction: column;\n  }\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-parallel-item:first-child::after {\n    align-self: flex-end;\n    width: 50%;\n  }\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-parallel-item:last-child::after {\n    align-self: flex-start;\n    width: 50%;\n  }\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-parallel-item:only-child::after {\n    width: 0;\n  }\n\n  /* Serial-specific style estimator block */\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-serial {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: var(--sklearn-color-background);\n    padding-right: 1em;\n    padding-left: 1em;\n  }\n\n\n  /* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n  clickable and can be expanded/collapsed.\n  - Pipeline and ColumnTransformer use this feature and define the default style\n  - Estimators will overwrite some part of the style using the `sk-estimator` class\n  */\n\n  /* Pipeline and ColumnTransformer style (default) */\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-toggleable {\n    /* Default theme specific background. It is overwritten whether we have a\n    specific estimator or a Pipeline/ColumnTransformer */\n    background-color: var(--sklearn-color-background);\n  }\n\n  /* Toggleable label */\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 label.sk-toggleable__label {\n    cursor: pointer;\n    display: block;\n    width: 100%;\n    margin-bottom: 0;\n    padding: 0.5em;\n    box-sizing: border-box;\n    text-align: center;\n  }\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 label.sk-toggleable__label-arrow:before {\n    /* Arrow on the left of the label */\n    content: \"▸\";\n    float: left;\n    margin-right: 0.25em;\n    color: var(--sklearn-color-icon);\n  }\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 label.sk-toggleable__label-arrow:hover:before {\n    color: var(--sklearn-color-text);\n  }\n\n  /* Toggleable content - dropdown */\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-toggleable__content {\n    max-height: 0;\n    max-width: 0;\n    overflow: hidden;\n    text-align: left;\n    background-color: var(--sklearn-color-level-0);\n  }\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-toggleable__content pre {\n    margin: 0.2em;\n    border-radius: 0.25em;\n    color: var(--sklearn-color-text);\n    background-color: var(--sklearn-color-level-0);\n  }\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n    /* Expand drop-down */\n    max-height: 200px;\n    max-width: 100%;\n    overflow: auto;\n  }\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n    content: \"▾\";\n  }\n\n  /* Pipeline/ColumnTransformer-specific style */\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n    color: var(--sklearn-color-text);\n    background-color: var(--sklearn-color-level-2);\n  }\n\n  /* Estimator-specific style */\n\n  /* Colorize estimator box */\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n    /* unfitted */\n    background-color: var(--sklearn-color-level-2);\n  }\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-label label.sk-toggleable__label,\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-label label {\n    /* The background is the default theme color */\n    color: var(--sklearn-color-text-on-default-background);\n  }\n\n  /* On hover, darken the color of the background */\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-label:hover label.sk-toggleable__label {\n    color: var(--sklearn-color-text);\n    background-color: var(--sklearn-color-level-2);\n  }\n\n  /* Estimator label */\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-label label {\n    font-family: monospace;\n    font-weight: bold;\n    display: inline-block;\n    line-height: 1.2em;\n  }\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-label-container {\n    text-align: center;\n  }\n\n  /* Estimator-specific */\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-estimator {\n    font-family: monospace;\n    border: 1px dotted var(--sklearn-color-border-box);\n    border-radius: 0.25em;\n    box-sizing: border-box;\n    margin-bottom: 0.5em;\n    background-color: var(--sklearn-color-level-0);\n  }\n\n  /* on hover */\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 div.sk-estimator:hover {\n    background-color: var(--sklearn-color-level-2);\n  }\n\n  /* Specification for estimator info */\n\n  .sk-estimator-doc-link,\n  a:link.sk-estimator-doc-link,\n  a:visited.sk-estimator-doc-link {\n    float: right;\n    font-size: smaller;\n    line-height: 1em;\n    font-family: monospace;\n    background-color: var(--sklearn-color-background);\n    border-radius: 1em;\n    height: 1em;\n    width: 1em;\n    text-decoration: none !important;\n    margin-left: 1ex;\n    border: var(--sklearn-color-level-1) 1pt solid;\n    color: var(--sklearn-color-level-1);\n  }\n\n  /* On hover */\n  div.sk-estimator:hover .sk-estimator-doc-link:hover,\n  .sk-estimator-doc-link:hover,\n  div.sk-label-container:hover .sk-estimator-doc-link:hover,\n  .sk-estimator-doc-link:hover {\n    background-color: var(--sklearn-color-level-3);\n    color: var(--sklearn-color-background);\n    text-decoration: none;\n  }\n\n  /* Span, style for the box shown on hovering the info icon */\n  .sk-estimator-doc-link span {\n    display: none;\n    z-index: 9999;\n    position: relative;\n    font-weight: normal;\n    right: .2ex;\n    padding: .5ex;\n    margin: .5ex;\n    width: min-content;\n    min-width: 20ex;\n    max-width: 50ex;\n    color: var(--sklearn-color-text);\n    box-shadow: 2pt 2pt 4pt #999;\n    background: var(--sklearn-color-level-0);\n    border: .5pt solid var(--sklearn-color-level-3);\n  }\n\n  .sk-estimator-doc-link:hover span {\n    display: block;\n  }\n\n  /* \"?\"-specific style due to the `<a>` HTML tag */\n\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 a.estimator_doc_link {\n    float: right;\n    font-size: 1rem;\n    line-height: 1em;\n    font-family: monospace;\n    background-color: var(--sklearn-color-background);\n    border-radius: 1rem;\n    height: 1rem;\n    width: 1rem;\n    text-decoration: none;\n    color: var(--sklearn-color-level-1);\n    border: var(--sklearn-color-level-1) 1pt solid;\n  }\n\n  /* On hover */\n  #sk-b8a6e28a-fce1-4c64-9111-9208d3424d66 a.estimator_doc_link:hover {\n    background-color: var(--sklearn-color-level-3);\n    color: var(--sklearn-color-background);\n    text-decoration: none;\n  }\n</style><div id='sk-b8a6e28a-fce1-4c64-9111-9208d3424d66' class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>TransformedTargetForecaster(steps=[OptimalReconciler(error_covariance_matrix=&#x27;ols&#x27;),\n                                   ReductionForecaster(estimator=LGBMRegressor(n_estimators=50, verbose=-1),\n                                                       normalization_strategy=&#x27;divide_mean&#x27;,\n                                                       window_length=30)])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class='sk-label-container'><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=UUID('3a335352-e07e-4c77-9fb0-d19415c47218') type=\"checkbox\" ><label for=UUID('3a335352-e07e-4c77-9fb0-d19415c47218') class='sk-toggleable__label sk-toggleable__label-arrow'>TransformedTargetForecaster<a class=\"sk-estimator-doc-link\" rel=\"noreferrer\" target=\"_blank\" href=\"https://www.sktime.net/en/v0.39.0/api_reference/auto_generated/sktime.forecasting.compose.TransformedTargetForecaster.html\">?<span>Documentation for TransformedTargetForecaster</span></a></label><div class=\"sk-toggleable__content\"><pre>TransformedTargetForecaster(steps=[OptimalReconciler(error_covariance_matrix=&#x27;ols&#x27;),\n                                   ReductionForecaster(estimator=LGBMRegressor(n_estimators=50, verbose=-1),\n                                                       normalization_strategy=&#x27;divide_mean&#x27;,\n                                                       window_length=30)])</pre></div></div></div><div class=\"sk-serial\"><div class='sk-item'><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=UUID('a5e7bfa5-2abd-4a88-9c3b-1ce22e360d3f') type=\"checkbox\" ><label for=UUID('a5e7bfa5-2abd-4a88-9c3b-1ce22e360d3f') class='sk-toggleable__label sk-toggleable__label-arrow'>OptimalReconciler<a class=\"sk-estimator-doc-link\" rel=\"noreferrer\" target=\"_blank\" href=\"https://www.sktime.net/en/v0.39.0/api_reference/auto_generated/sktime.transformations.hierarchical.reconcile.OptimalReconciler.html\">?<span>Documentation for OptimalReconciler</span></a></label><div class=\"sk-toggleable__content\"><pre>OptimalReconciler(error_covariance_matrix=&#x27;ols&#x27;)</pre></div></div></div><div class=\"sk-item sk-dashed-wrapped\"><div class='sk-label-container'><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=UUID('10af055d-423e-4ff4-8b9b-4258529cd337') type=\"checkbox\" ><label for=UUID('10af055d-423e-4ff4-8b9b-4258529cd337') class='sk-toggleable__label sk-toggleable__label-arrow'>ReductionForecaster</label><div class=\"sk-toggleable__content\"><pre>ReductionForecaster(estimator=LGBMRegressor(n_estimators=50, verbose=-1),\n                    normalization_strategy=&#x27;divide_mean&#x27;, window_length=30)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class='sk-label-container'><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=UUID('a1a5c1ab-86f2-424a-bfb6-4539ba8cd315') type=\"checkbox\" ><label for=UUID('a1a5c1ab-86f2-424a-bfb6-4539ba8cd315') class='sk-toggleable__label sk-toggleable__label-arrow'>estimator: LGBMRegressor</label><div class=\"sk-toggleable__content\"><pre>LGBMRegressor(n_estimators=50, verbose=-1)</pre></div></div></div><div class=\"sk-serial\"><div class='sk-item'><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=UUID('923553a8-d118-46ee-9409-b7bcf49a1064') type=\"checkbox\" ><label for=UUID('923553a8-d118-46ee-9409-b7bcf49a1064') class='sk-toggleable__label sk-toggleable__label-arrow'>LGBMRegressor</label><div class=\"sk-toggleable__content\"><pre>LGBMRegressor(n_estimators=50, verbose=-1)</pre></div></div></div></div></div></div></div></div></div></div></div></div>\n```\n:::\n:::\n\n\n::: {#a0fce950 .cell execution_count=13}\n``` {.python .cell-code}\ny_pred_bottomup = bottom_up.predict(fh=fh)\ny_pred_topdown = top_down_fcst.predict(fh=fh)\ny_pred_optimal = optimal.predict(fh=fh)\n```\n:::\n\n\n::: {#acd00d64 .cell execution_count=14}\n``` {.python .cell-code}\nAggregator().fit_transform(y_pred_bottomup) - y_pred_bottomup\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th></th>\n      <th>sales</th>\n    </tr>\n    <tr>\n      <th>group_id</th>\n      <th>sku_id</th>\n      <th>date</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">-1</th>\n      <th rowspan=\"5\" valign=\"top\">20</th>\n      <th>2024-07-06</th>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2024-07-07</th>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2024-07-08</th>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2024-07-09</th>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2024-07-10</th>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <th>...</th>\n      <th>...</th>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">__total</th>\n      <th rowspan=\"5\" valign=\"top\">__total</th>\n      <th>2024-12-28</th>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2024-12-29</th>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2024-12-30</th>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2024-12-31</th>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2025-01-01</th>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5580 rows × 1 columns</p>\n</div>\n```\n:::\n:::\n\n\nIn this case, there's not a lot of difference between the reconciliation outputs.\nBut we will see that the bottom-up approach is the most accurate one.\n\n::: {#1954362c .cell execution_count=15}\n``` {.python .cell-code}\nfrom sktime.utils.plotting import plot_series\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n\nidx = y_train.index.droplevel(-1).unique()[10]\n\nplot_series(\n    y_train.loc[idx,], y_test.loc[idx,], y_pred.loc[idx,], y_pred_optimal.loc[idx,],\n    labels=[\"Train\", \"Test\", \"Predicted\", \"Predicted Optimal\"],\n)\nplt.xlim(pd.to_datetime(\"2024-05-01\"), None)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](hierarchical_forecasting_files/figure-html/cell-16-output-1.png){}\n:::\n:::\n\n\n::: {#54e9116e .cell execution_count=16}\n``` {.python .cell-code}\nfrom sktime.forecasting.reconcile import ReconcilerForecaster\n\n\nmint_forecaster = ReconcilerForecaster(\n    forecaster=forecaster,\n    method=\"mint_shrink\")\n\nmint_forecaster.fit(y_train)\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```{=html}\n<style>#sk-fad4f3fd-f3b4-48e3-9675-385fe375920a {\n    /* Definition of color scheme common for light and dark mode */\n    --sklearn-color-text: black;\n    --sklearn-color-line: gray;\n    /* Definition of color scheme for objects */\n    --sklearn-color-level-0: #fff5e6;\n    --sklearn-color-level-1: #f6e4d2;\n    --sklearn-color-level-2: #ffe0b3;\n    --sklearn-color-level-3: chocolate;\n\n    /* Specific color for light theme */\n    --sklearn-color-text-on-default-background: var(--theme-code-foreground, var(--jp-content-font-color1, black));\n    --sklearn-color-background: var(--theme-background, var(--jp-layout-color0, white));\n    --sklearn-color-border-box: var(--theme-code-foreground, var(--jp-content-font-color1, black));\n    --sklearn-color-icon: #696969;\n\n    @media (prefers-color-scheme: dark) {\n      /* Redefinition of color scheme for dark theme */\n      --sklearn-color-text-on-default-background: var(--theme-code-foreground, var(--jp-content-font-color1, white));\n      --sklearn-color-background: var(--theme-background, var(--jp-layout-color0, #111));\n      --sklearn-color-border-box: var(--theme-code-foreground, var(--jp-content-font-color1, white));\n      --sklearn-color-icon: #878787;\n    }\n  }\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a {\n    color: var(--sklearn-color-text);\n  }\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a pre {\n    padding: 0;\n  }\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a input.sk-hidden--visually {\n    border: 0;\n    clip: rect(1px 1px 1px 1px);\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n  }\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-dashed-wrapped {\n    border: 1px dashed var(--sklearn-color-line);\n    margin: 0 0.4em 0.5em 0.4em;\n    box-sizing: border-box;\n    padding-bottom: 0.4em;\n    background-color: var(--sklearn-color-background);\n  }\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-container {\n    /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n       but bootstrap.min.css set `[hidden] { display: none !important; }`\n       so we also need the `!important` here to be able to override the\n       default hidden behavior on the sphinx rendered scikit-learn.org.\n       See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n    display: inline-block !important;\n    position: relative;\n  }\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-text-repr-fallback {\n    display: none;\n  }\n\n  div.sk-parallel-item,\n  div.sk-serial,\n  div.sk-item {\n    /* draw centered vertical line to link estimators */\n    background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n    background-size: 2px 100%;\n    background-repeat: no-repeat;\n    background-position: center center;\n  }\n\n  /* Parallel-specific style estimator block */\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-parallel-item::after {\n    content: \"\";\n    width: 100%;\n    border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n    flex-grow: 1;\n  }\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-parallel {\n    display: flex;\n    align-items: stretch;\n    justify-content: center;\n    background-color: var(--sklearn-color-background);\n    position: relative;\n  }\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-parallel-item {\n    display: flex;\n    flex-direction: column;\n  }\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-parallel-item:first-child::after {\n    align-self: flex-end;\n    width: 50%;\n  }\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-parallel-item:last-child::after {\n    align-self: flex-start;\n    width: 50%;\n  }\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-parallel-item:only-child::after {\n    width: 0;\n  }\n\n  /* Serial-specific style estimator block */\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-serial {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: var(--sklearn-color-background);\n    padding-right: 1em;\n    padding-left: 1em;\n  }\n\n\n  /* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n  clickable and can be expanded/collapsed.\n  - Pipeline and ColumnTransformer use this feature and define the default style\n  - Estimators will overwrite some part of the style using the `sk-estimator` class\n  */\n\n  /* Pipeline and ColumnTransformer style (default) */\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-toggleable {\n    /* Default theme specific background. It is overwritten whether we have a\n    specific estimator or a Pipeline/ColumnTransformer */\n    background-color: var(--sklearn-color-background);\n  }\n\n  /* Toggleable label */\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a label.sk-toggleable__label {\n    cursor: pointer;\n    display: block;\n    width: 100%;\n    margin-bottom: 0;\n    padding: 0.5em;\n    box-sizing: border-box;\n    text-align: center;\n  }\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a label.sk-toggleable__label-arrow:before {\n    /* Arrow on the left of the label */\n    content: \"▸\";\n    float: left;\n    margin-right: 0.25em;\n    color: var(--sklearn-color-icon);\n  }\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a label.sk-toggleable__label-arrow:hover:before {\n    color: var(--sklearn-color-text);\n  }\n\n  /* Toggleable content - dropdown */\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-toggleable__content {\n    max-height: 0;\n    max-width: 0;\n    overflow: hidden;\n    text-align: left;\n    background-color: var(--sklearn-color-level-0);\n  }\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-toggleable__content pre {\n    margin: 0.2em;\n    border-radius: 0.25em;\n    color: var(--sklearn-color-text);\n    background-color: var(--sklearn-color-level-0);\n  }\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a input.sk-toggleable__control:checked~div.sk-toggleable__content {\n    /* Expand drop-down */\n    max-height: 200px;\n    max-width: 100%;\n    overflow: auto;\n  }\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n    content: \"▾\";\n  }\n\n  /* Pipeline/ColumnTransformer-specific style */\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n    color: var(--sklearn-color-text);\n    background-color: var(--sklearn-color-level-2);\n  }\n\n  /* Estimator-specific style */\n\n  /* Colorize estimator box */\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n    /* unfitted */\n    background-color: var(--sklearn-color-level-2);\n  }\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-label label.sk-toggleable__label,\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-label label {\n    /* The background is the default theme color */\n    color: var(--sklearn-color-text-on-default-background);\n  }\n\n  /* On hover, darken the color of the background */\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-label:hover label.sk-toggleable__label {\n    color: var(--sklearn-color-text);\n    background-color: var(--sklearn-color-level-2);\n  }\n\n  /* Estimator label */\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-label label {\n    font-family: monospace;\n    font-weight: bold;\n    display: inline-block;\n    line-height: 1.2em;\n  }\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-label-container {\n    text-align: center;\n  }\n\n  /* Estimator-specific */\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-estimator {\n    font-family: monospace;\n    border: 1px dotted var(--sklearn-color-border-box);\n    border-radius: 0.25em;\n    box-sizing: border-box;\n    margin-bottom: 0.5em;\n    background-color: var(--sklearn-color-level-0);\n  }\n\n  /* on hover */\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a div.sk-estimator:hover {\n    background-color: var(--sklearn-color-level-2);\n  }\n\n  /* Specification for estimator info */\n\n  .sk-estimator-doc-link,\n  a:link.sk-estimator-doc-link,\n  a:visited.sk-estimator-doc-link {\n    float: right;\n    font-size: smaller;\n    line-height: 1em;\n    font-family: monospace;\n    background-color: var(--sklearn-color-background);\n    border-radius: 1em;\n    height: 1em;\n    width: 1em;\n    text-decoration: none !important;\n    margin-left: 1ex;\n    border: var(--sklearn-color-level-1) 1pt solid;\n    color: var(--sklearn-color-level-1);\n  }\n\n  /* On hover */\n  div.sk-estimator:hover .sk-estimator-doc-link:hover,\n  .sk-estimator-doc-link:hover,\n  div.sk-label-container:hover .sk-estimator-doc-link:hover,\n  .sk-estimator-doc-link:hover {\n    background-color: var(--sklearn-color-level-3);\n    color: var(--sklearn-color-background);\n    text-decoration: none;\n  }\n\n  /* Span, style for the box shown on hovering the info icon */\n  .sk-estimator-doc-link span {\n    display: none;\n    z-index: 9999;\n    position: relative;\n    font-weight: normal;\n    right: .2ex;\n    padding: .5ex;\n    margin: .5ex;\n    width: min-content;\n    min-width: 20ex;\n    max-width: 50ex;\n    color: var(--sklearn-color-text);\n    box-shadow: 2pt 2pt 4pt #999;\n    background: var(--sklearn-color-level-0);\n    border: .5pt solid var(--sklearn-color-level-3);\n  }\n\n  .sk-estimator-doc-link:hover span {\n    display: block;\n  }\n\n  /* \"?\"-specific style due to the `<a>` HTML tag */\n\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a a.estimator_doc_link {\n    float: right;\n    font-size: 1rem;\n    line-height: 1em;\n    font-family: monospace;\n    background-color: var(--sklearn-color-background);\n    border-radius: 1rem;\n    height: 1rem;\n    width: 1rem;\n    text-decoration: none;\n    color: var(--sklearn-color-level-1);\n    border: var(--sklearn-color-level-1) 1pt solid;\n  }\n\n  /* On hover */\n  #sk-fad4f3fd-f3b4-48e3-9675-385fe375920a a.estimator_doc_link:hover {\n    background-color: var(--sklearn-color-level-3);\n    color: var(--sklearn-color-background);\n    text-decoration: none;\n  }\n</style><div id='sk-fad4f3fd-f3b4-48e3-9675-385fe375920a' class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>ReconcilerForecaster(forecaster=ReductionForecaster(estimator=LGBMRegressor(n_estimators=50, verbose=-1),\n                                                    normalization_strategy=&#x27;divide_mean&#x27;,\n                                                    window_length=30))</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class='sk-label-container'><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=UUID('62e4d403-5850-46b0-9195-95cbbb5028ab') type=\"checkbox\" ><label for=UUID('62e4d403-5850-46b0-9195-95cbbb5028ab') class='sk-toggleable__label sk-toggleable__label-arrow'>ReconcilerForecaster<a class=\"sk-estimator-doc-link\" rel=\"noreferrer\" target=\"_blank\" href=\"https://www.sktime.net/en/v0.39.0/api_reference/auto_generated/sktime.forecasting.reconcile.ReconcilerForecaster.html\">?<span>Documentation for ReconcilerForecaster</span></a></label><div class=\"sk-toggleable__content\"><pre>ReconcilerForecaster(forecaster=ReductionForecaster(estimator=LGBMRegressor(n_estimators=50, verbose=-1),\n                                                    normalization_strategy=&#x27;divide_mean&#x27;,\n                                                    window_length=30))</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class='sk-label-container'><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=UUID('176774ab-1722-4fce-8bf5-eee3a2204080') type=\"checkbox\" ><label for=UUID('176774ab-1722-4fce-8bf5-eee3a2204080') class='sk-toggleable__label sk-toggleable__label-arrow'>forecaster: ReductionForecaster</label><div class=\"sk-toggleable__content\"><pre>ReductionForecaster(estimator=LGBMRegressor(n_estimators=50, verbose=-1),\n                    normalization_strategy=&#x27;divide_mean&#x27;, window_length=30)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class='sk-label-container'><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=UUID('fbb202aa-2901-4d6b-9aa5-ca82e48c5bbd') type=\"checkbox\" ><label for=UUID('fbb202aa-2901-4d6b-9aa5-ca82e48c5bbd') class='sk-toggleable__label sk-toggleable__label-arrow'>estimator: LGBMRegressor</label><div class=\"sk-toggleable__content\"><pre>LGBMRegressor(n_estimators=50, verbose=-1)</pre></div></div></div><div class=\"sk-serial\"><div class='sk-item'><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=UUID('d38a1996-accb-45ae-8b56-79e348106d3f') type=\"checkbox\" ><label for=UUID('d38a1996-accb-45ae-8b56-79e348106d3f') class='sk-toggleable__label sk-toggleable__label-arrow'>LGBMRegressor</label><div class=\"sk-toggleable__content\"><pre>LGBMRegressor(n_estimators=50, verbose=-1)</pre></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div>\n```\n:::\n:::\n\n\n::: {#32d65af9 .cell execution_count=17}\n``` {.python .cell-code}\ny_pred_mint = mint_forecaster.predict(fh=fh)\n```\n:::\n\n\n::: {#c66d6cee .cell execution_count=18}\n``` {.python .cell-code}\nfrom sktime.performance_metrics.forecasting import MeanSquaredScaledError\n\nmetric = MeanSquaredScaledError(multilevel=\"uniform_average_time\")\n\npd.DataFrame(\n    {   \n        \"Baseline\": metric(y_test, y_pred, y_train=y_train),\n        \"BottomUpReconciler\": metric(y_test, y_pred_bottomup, y_train=y_train),\n        \"TopDownReconciler\": metric(y_test, y_pred_topdown, y_train=y_train),\n        \"OptimalReconciler (ols)\": metric(y_test, y_pred_optimal, y_train=y_train),\n        \"Mint Reconciler\": metric(y_test, y_pred_mint, y_train=y_train),\n    },\n    index=[\"Mean Absolute Scaled Error\"]\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Baseline</th>\n      <th>BottomUpReconciler</th>\n      <th>TopDownReconciler</th>\n      <th>OptimalReconciler (ols)</th>\n      <th>Mint Reconciler</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Mean Absolute Scaled Error</th>\n      <td>27.466796</td>\n      <td>86.13028</td>\n      <td>32.833041</td>\n      <td>33.48232</td>\n      <td>34.572241</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "hierarchical_forecasting_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}